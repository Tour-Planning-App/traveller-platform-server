syntax = "proto3";
package trip;
import "google/protobuf/timestamp.proto";

option go_package = "github.com/Tour-Planning-App/traveller-platform-server/proto/trip";

message Trip {
  string id = 1;
  string userId = 2;
  string name = 3;
  string destination = 4;
  repeated string dates = 5; // ISO strings, e.g., ['2025-12-01', '2025-12-07']
  double budget = 6; // In user's currency
  repeated ItineraryDay itinerary = 7;
  repeated BucketItem bucketList = 8;
  bool isShared = 9;
  string shareToken = 10; // For sharing
  google.protobuf.Timestamp createdAt = 11;
  google.protobuf.Timestamp updatedAt = 12;
}

message ItineraryDay {
  int32 day = 1; // Day number (1-based)
  string date = 2; // ISO date
  string name = 3; // e.g., 'Day 1: Arrival in Colombo'
  repeated Activity activities = 4;
  Note note = 5;
  Checklist checklist = 6;
}

message Activity {
  string id = 1;
  string type = 2; // 'place', 'stay', 'food', 'activity'
  string name = 3;
  string description = 4;
  double rating = 5;
  string location = 6; // e.g., 'Colombo, Sri Lanka'
  google.protobuf.Timestamp time = 7; // Start time
  string photoUrl = 8;
  string placeId = 9;
}

message BucketItem {
  string id = 1;
  string name = 2;
  string description = 3;
  bool confirmed = 4; // Added to itinerary or not
  string photoUrl = 5;
  string address = 6;
}

message Note {
  string content = 1;
}

message Checklist {
  repeated ChecklistItem items = 1;
}

message ChecklistItem {
  string id = 1;
  string text = 2;
  bool completed = 3;
}

message LocationSuggestion {
  string name = 1;
  string description = 2;
  string address = 3;
  string photoUrl = 4;
  double rating = 5;
  string placeId = 6;
}

message CreateTripRequest {
  string userId = 1;
  string name = 2;
  string destination = 3;
  repeated string dates = 4;
  double budget = 5;
}

message CreateTripResponse {
  bool success = 1;
  string message = 2;
  Trip trip = 3;
}

message UpdateTripRequest {
  string id = 1;
  string name = 2;
  repeated string dates = 3; // For edit dates
  double budget = 4; // For edit budget
}

message UpdateTripResponse {
  bool success = 1;
  string message = 2;
  Trip trip = 3;
}

message GetTripRequest {
  string id = 1;
}

message GetTripResponse {
  bool success = 1;
  Trip trip = 2;
}

message GetUserTripsRequest {
  string userId = 1;
}

message GetUserTripsResponse {
  bool success = 1;
  repeated Trip trips = 2;
}

message DeleteTripRequest {
  string id = 1;
  string userId = 2;
}

message DeleteTripResponse {
  bool success = 1;
  string message = 2;
}

message AddItineraryItemRequest {
  string tripId = 1;
  int32 day = 2;
  Activity activity = 3; // Add place/stay/food/activity
}

message AddItineraryItemResponse {
  bool success = 1;
  string message = 2;
  ItineraryDay day = 3;
}

message RemoveItineraryItemRequest {
  string tripId = 1;
  string activityId = 2;
  int32 day = 3;
}

message RemoveItineraryItemResponse {
  bool success = 1;
  string message = 2;
}

message AddBucketItemRequest {
  string tripId = 1;
  string name = 2;
  string description = 3;
  string photoUrl = 4;
  string address = 5;
}

message AddBucketItemResponse {
  bool success = 1;
  string message = 2;
  BucketItem item = 3;
}

message RemoveBucketItemRequest {
  string tripId = 1;
  string itemId = 2;
}

message RemoveBucketItemResponse {
  bool success = 1;
  string message = 2;
}

message ShareTripRequest {
  string tripId = 1;
  string userId = 2;
}

message ShareTripResponse {
  bool success = 1;
  string message = 2;
  string shareToken = 3;
}

message AddNoteRequest {
  string tripId = 1;
  int32 day = 2;
  string content = 3;
}

message AddNoteResponse {
  bool success = 1;
  string message = 2;
  Note note = 3;
}

message AddChecklistItemRequest {
  string tripId = 1;
  int32 day = 2;
  string text = 3;
}

message AddChecklistItemResponse {
  bool success = 1;
  string message = 2;
  Checklist checklist = 3;
}

message UpdateChecklistItemRequest {
  string tripId = 1;
  int32 day = 2;
  string itemId = 3;
  bool completed = 4;
}

message UpdateChecklistItemResponse {
  bool success = 1;
  string message = 2;
}

message CreateAITripRequest {
  string userId = 1;
  string name = 2;
  string destination = 3;
  double budget = 4;
  repeated string interests = 5;
  string specialRequests = 6;
  repeated string dates = 7;
}

message CreateAITripResponse {
  bool success = 1;
  string message = 2;
  Trip trip = 3;
}

message OptimizeDayRequest {
  string tripId = 1;
  int32 day = 2;
  string userId = 3;
}

message OptimizeDayResponse {
  bool success = 1;
  string message = 2;
  ItineraryDay day = 3;
}

message MoveBucketToItineraryRequest {
  string tripId = 1;
  string itemId = 2;
  int32 day = 3;
  string activityType = 4;  // Default 'activity'
  string userId = 5;
}

message MoveBucketToItineraryResponse {
  bool success = 1;
  string message = 2;
  Activity activity = 3;  // New activity created
}

message AutoFillLocationRequest {
  string tripId = 1;
  int32 day = 2;
  string activityId = 3;
  string query = 4;  // e.g., "beach near Ella"
  string userId = 5;
}

message AutoFillLocationResponse {
  bool success = 1;
  string message = 2;
  string location = 3;
}

message SearchLocationsRequest {
  string tripId = 1;
  string userId = 2;
  string query = 3;
  int32 limit = 4;
}

message SearchLocationsResponse {
  bool success = 1;
  repeated LocationSuggestion suggestions = 2;
}

service TripService {
  rpc CreateTrip(CreateTripRequest) returns (CreateTripResponse);
  rpc CreateAITrip(CreateAITripRequest) returns (CreateAITripResponse);
  rpc UpdateTrip(UpdateTripRequest) returns (UpdateTripResponse);
  rpc GetTrip(GetTripRequest) returns (GetTripResponse);
  rpc GetUserTrips(GetUserTripsRequest) returns (GetUserTripsResponse);
  rpc DeleteTrip(DeleteTripRequest) returns (DeleteTripResponse);
  rpc AddItineraryItem(AddItineraryItemRequest) returns (AddItineraryItemResponse);
  rpc RemoveItineraryItem(RemoveItineraryItemRequest) returns (RemoveItineraryItemResponse);
  rpc AddBucketItem(AddBucketItemRequest) returns (AddBucketItemResponse);
  rpc RemoveBucketItem(RemoveBucketItemRequest) returns (RemoveBucketItemResponse);
  rpc ShareTrip(ShareTripRequest) returns (ShareTripResponse);
  rpc AddNote(AddNoteRequest) returns (AddNoteResponse);
  rpc AddChecklistItem(AddChecklistItemRequest) returns (AddChecklistItemResponse);
  rpc UpdateChecklistItem(UpdateChecklistItemRequest) returns (UpdateChecklistItemResponse);
  rpc OptimizeDay(OptimizeDayRequest) returns (OptimizeDayResponse);
  rpc MoveBucketToItinerary(MoveBucketToItineraryRequest) returns (MoveBucketToItineraryResponse);
  rpc AutoFillLocation(AutoFillLocationRequest) returns (AutoFillLocationResponse);
  rpc SearchLocations(SearchLocationsRequest) returns (SearchLocationsResponse);
}