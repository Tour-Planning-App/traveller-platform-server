syntax = "proto3";
package user;
import "google/protobuf/timestamp.proto";

service UserService {
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
  rpc GetUser(GetUserRequest) returns (GetUserResponse);
  rpc GetUserById(GetUserByIdRequest) returns (GetUserResponse);
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
  rpc UpdateProfile(UpdateProfileRequest) returns (UpdateProfileResponse);

  // New RPCs for subscriptions
  rpc CreateSubscription(CreateSubscriptionRequest) returns (CreateSubscriptionResponse);
  rpc GetSubscription(GetSubscriptionRequest) returns (GetSubscriptionResponse);
  rpc UpdateSubscription(UpdateSubscriptionRequest) returns (UpdateSubscriptionResponse);
  rpc HandleStripeWebhook(UpdateSubscriptionRequest) returns (GetUserResponse); // For webhook events
  rpc CheckSubscriptionAccess(CheckSubscriptionAccessRequest) returns (CheckSubscriptionAccessResponse);
}

message CreateUserRequest {
  string email = 1;
  string password = 2;
  string name = 3;
  string role = 4;
  string preferredLanguage = 5;
  string preferredCurrency = 6;
}

message CreateUserResponse {
  int32 status = 1;
  string message = 2;
  string id = 3;
}

message GetUserRequest {
  string email = 1;
}

message GetUserByIdRequest {
  string id = 1;
}

message GetUserResponse {
  int32 status = 1;
  string message = 2;
  User data = 3;
}

message UpdateUserRequest {
  string email = 1;
  string password = 2;
  string name = 3;
  string preferredLanguage = 4;
  string preferredCurrency = 5;
}

message UpdateUserResponse {
  int32 status = 1;
  string message = 2;
  string id = 3;
}

message DeleteUserRequest {
  string email = 1;
}

message DeleteUserResponse {
  int32 status = 1;
  string message = 2;
}

message UpdateProfileRequest {
  string user_id = 1;
  string name = 2;
  string email = 3;
  string preferredLanguage = 4;
  string preferredCurrency = 5;
}

message UpdateProfileResponse {
  int32 status = 1;
  string message = 2;
  string id = 3;
}

// Single User message definition
message User {
  string id = 1;
  string email = 2;
  string name = 3;
  string role = 4;
  string preferredLanguage = 5;
  string preferredCurrency = 6;
  repeated string travelerTypes = 7;
  repeated string transportationPreferences = 8;
  repeated string foodDrinkPreferences = 9;
  repeated string sriLankaVibes = 10;
  google.protobuf.Timestamp createdAt = 11;
  google.protobuf.Timestamp updatedAt = 12;
  string plan = 13; // 'free', 'basic', 'premium'
  bool is_subscribed = 14;
  google.protobuf.Timestamp subscription_end_date = 15;
}

// New messages for subscriptions
message CreateSubscriptionRequest {
  string user_id = 1;
  string plan = 2; // 'basic' or 'premium'
}

message CreateSubscriptionResponse {
  bool success = 1;
  string message = 2;
  string checkout_url = 3;
}

message GetSubscriptionRequest {
  string user_id = 1;
}

message GetSubscriptionResponse {
  bool success = 1;
  string message = 2;
  SubscriptionData data = 3;
}

message SubscriptionData {
  string id = 1;
  string plan = 2; // 'free', 'basic', 'premium'
  bool is_active = 3;
  google.protobuf.Timestamp end_date = 4;
  string stripe_subscription_id = 5;
}

message UpdateSubscriptionRequest {
  string user_id = 1;
  string plan = 2;
}

message UpdateSubscriptionResponse {
  bool success = 1;
  string message = 2;
  string checkout_url = 3;
}

message CheckSubscriptionAccessRequest {
  string user_id = 1;
  int32 required_level = 2; // 0=free, 1=basic, 2=premium
}

message CheckSubscriptionAccessResponse {
  bool has_access = 1;
}